<UserControl
   x:Class="TrustedActivityCreator.View.MenuBarUC"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:local="clr-namespace:TrustedActivityCreator.View"
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   d:DesignHeight="50"
   d:DesignWidth="300"
   mc:Ignorable="d">
	<Menu>
			<Menu.Resources>
				<SolidColorBrush x:Key="HighlightedBackgroundBrush" Color="#FF797878"/>
			<SolidColorBrush x:Key="MenuBackgroundBrush" Color="#1f2021"/>
				<SolidColorBrush x:Key="NormalBorderBrush" Color="#FFFFFFFF"/>
				<SolidColorBrush x:Key="SolidMenuFontBrush" Color="#FFFFFFFF"/>
				<SolidColorBrush x:Key="HighlightedText" Color="#FFFFFFFF"/>
				<Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
					<Setter Property="OverridesDefaultStyle" Value="True"/>
					<Setter Property="SnapsToDevicePixels" Value="True"/>
					<Setter Property="Height" Value="25"/>
					<Setter Property="Foreground" Value="{StaticResource SolidMenuFontBrush}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Menu}">
								<Border Background="{StaticResource MenuBackgroundBrush}" BorderBrush="{StaticResource MenuBackgroundBrush}" BorderThickness="1">
									<StackPanel ClipToBounds="True" IsItemsHost="True" Orientation="Horizontal"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type MenuItem}">
								<Border
                           x:Name="Border"
                           Background="{TemplateBinding Background}"
                           BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="1">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition
                                    x:Name="Col0"
                                    MinWidth="17"
                                    Width="Auto"
                                    SharedSizeGroup="MenuItemIconColumnGroup"/>
											<ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
											<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
											<ColumnDefinition x:Name="Col3" Width="14"/>
										</Grid.ColumnDefinitions>
										<!-- ContentPresenter to show an Icon if needed -->
										<ContentPresenter
                                 x:Name="Icon"
                                 Grid.Column="0"
                                 Margin="4,0,6,0"
                                 VerticalAlignment="Center"
                                 ContentSource="Icon"/>
										<!-- Glyph is a checkmark if needed for a checkable menu -->
										<Grid
                                 x:Name="GlyphPanel"
                                 Grid.Column="0"
                                 Margin="4,0,6,0"
                                 VerticalAlignment="Center"
                                 Visibility="Hidden">
											<Path
                                    x:Name="GlyphPanelpath"
                                    VerticalAlignment="Center"
                                    Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                    Fill="{TemplateBinding Foreground}"
                                    FlowDirection="LeftToRight"/>
										</Grid>
										<!-- Content for the menu text etc -->
										<ContentPresenter
                                 x:Name="HeaderHost"
                                 Grid.Column="1"
                                 Margin="{TemplateBinding Padding}"
                                 ContentSource="Header"
                                 RecognizesAccessKey="True"/>
										<!-- Content for the menu IGT -->
										<ContentPresenter
                                 x:Name="IGTHost"
                                 Grid.Column="2"
                                 Margin="8,1,8,1"
                                 VerticalAlignment="Center"
                                 ContentSource="InputGestureText"/>
										<!-- Arrow drawn path which points to the next level of the menu -->
										<Grid
                                 x:Name="ArrowPanel"
                                 Grid.Column="3"
                                 Margin="4,0,6,0"
                                 VerticalAlignment="Center">
											<Path
                                    x:Name="ArrowPanelPath"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Data="M0,0 L0,8 L4,4 z"
                                    Fill="{TemplateBinding Foreground}"/>
										</Grid>
										<!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
										<Popup
                                 x:Name="SubMenuPopup"
                                 Focusable="false"
                                 IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                 Placement="Right"
                                 PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
											<Border
                                    x:Name="SubMenuBorder"
                                    BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"
                                    BorderThickness="1"
                                    Padding="2,2,2,2">
												<Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
													<!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
													<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
												</Grid>
											</Border>
										</Popup>
									</Grid>
								</Border>
								<!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
								<ControlTemplate.Triggers>
									<!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
									<Trigger Property="Role" Value="TopLevelHeader">
										<Setter Property="Padding" Value="6,1,6,1"/>
										<Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
										<Setter TargetName="Col0" Property="MinWidth" Value="0"/>
										<Setter TargetName="Col3" Property="Width" Value="Auto"/>
										<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
										<Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed"/>
										<Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
										<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
									</Trigger>
									<!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
									<Trigger Property="Role" Value="TopLevelItem">
										<Setter Property="Padding" Value="6,1,6,1"/>
										<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
									</Trigger>
									<!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
									<Trigger Property="Role" Value="SubmenuHeader">
										<Setter Property="DockPanel.Dock" Value="Top"/>
										<Setter Property="Padding" Value="0,2,0,2"/>
									</Trigger>
									<!-- Role = SubMenuItem : this is a child menu item which has children-->
									<Trigger Property="Role" Value="SubmenuItem">
										<Setter Property="DockPanel.Dock" Value="Top"/>
										<Setter Property="Padding" Value="0,2,0,2"/>
										<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="IsSuspendingPopupAnimation" Value="true">
										<Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
									</Trigger>
									<!-- If no Icon is present the we collapse the Icon Content -->
									<Trigger Property="Icon" Value="{x:Null}">
										<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
									</Trigger>
									<!-- The GlyphPanel contains the CheckMark -->
									<Trigger Property="IsChecked" Value="true">
										<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
										<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
									</Trigger>
									<!-- Using the system colors for the Menu Highlight and IsEnabled-->
									<Trigger Property="IsHighlighted" Value="true">
										<Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightedBackgroundBrush}"/>
										<Setter Property="Foreground" Value="{StaticResource HighlightedText}"/>
										<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
									</Trigger>
									<Trigger Property="IsHighlighted" Value="false">
										<Setter TargetName="Border" Property="Background" Value="{StaticResource MenuBackgroundBrush}"/>
										<Setter Property="Foreground" Value="{StaticResource SolidMenuFontBrush}"/>
										<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuBackgroundBrush}"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="LightGray"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Menu.Resources>
			<MenuItem Header="_File">
				<MenuItem Header="_New" InputGestureText="Ctrl+N"/>
				<MenuItem Header="_Load" InputGestureText="Ctrl+O"/>
				<MenuItem Header="_Save" InputGestureText="Ctrl+S"/>
				<MenuItem Header="Save as" InputGestureText="Ctrl+Alt+S"/>
				<MenuItem Header="_Close" InputGestureText="Ctrl+W"/>
				<MenuItem Header="_Export as" InputGestureText="Ctrl+E"/>
				<MenuItem Header="Exit"/>
			</MenuItem>
			<MenuItem Header="_Edit">
				<MenuItem Header="Undo" InputGestureText="Ctrl+Z"/>
				<MenuItem Header="Redo" InputGestureText="Ctrl+Y"/>
				<MenuItem Header="Copy" InputGestureText="Ctrl+C"/>
				<MenuItem Header="Cut" InputGestureText="Ctrl+X"/>
				<MenuItem Header="Paste" InputGestureText="Ctrl+V"/>
				<MenuItem Header="Select All" InputGestureText="Ctrl+A"/>
			</MenuItem>
			<MenuItem Header="View">
				<MenuItem Header="Zoom +" InputGestureText="Ctrl++"/>
				<MenuItem Header="Zoom _-" InputGestureText="Ctrl+-"/>
				<MenuItem Header="_Present" InputGestureText="F11"/>
			</MenuItem>
		</Menu>
</UserControl>